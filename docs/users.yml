openapi: 3.0.0
info:
  title: User API
  description: API for managing users
  version: 1.0.0
servers:
  - url: http://localhost:5000
paths:
  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    username:
                      type: string
                      example: jdoe
                    email:
                      type: string
                      example: jdoe@example.com
      tags:
        - users
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: jdoe
                email:
                  type: string
                  example: jdoe@example.com
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  username:
                    type: string
                    example: jdoe
                  email:
                    type: string
                    example: jdoe@example.com
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      tags:
        - users
  /users/{user_id}:
    get:
      summary: Get a single user by ID
      parameters:
        - in: path
          name: user_id
          required: true
          description: ID of the user to retrieve
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  username:
                    type: string
                    example: jdoe
                  email:
                    type: string
                    example: jdoe@example.com
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      tags:
        - users
    put:
      summary: Update a user by ID
      parameters:
        - in: path
          name: user_id
          required: true
          description: ID of the user to update
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: jdoe
                email:
                  type: string
                  example: jdoe@example.com
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  username:
                    type: string
                    example: jdoe
                  email:
                    type: string
                    example: jdoe@example.com
        '404':
          description: Not Found
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      tags:
        - users
    delete:
      summary: Delete a user by ID
      parameters:
        - in: path
          name: user_id
